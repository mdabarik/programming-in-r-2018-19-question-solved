A CSV (Comma-Separated Values) file is a plain text file format commonly used to store tabular data, where each line represents a row and fields within each row are separated by commas (or other specified delimiters). CSV files are widely used for data storage and interchange because they are easy to read, write, and parse.

In R, the `read.csv()` function is commonly used to read CSV files. It's part of the base R package and provides a simple way to import data from CSV files into R data frames, which are one of the fundamental data structures in R.

Here's an example of how to use the `read.csv()` function to read a CSV file named "data.csv" and store its contents in an R data frame:

Assuming you have a CSV file named "data.csv" with the following content:

```
Name,Age,Score
Alice,25,85
Bob,32,92
Carol,28,78
David,22,95
```

Here's how you would read and load this data into an R data frame:

```r
# Read CSV file into an R data frame
data <- read.csv("data.csv")

# Print the contents of the data frame
print(data)
```

The output will be:

```
    Name Age Score
1  Alice  25    85
2    Bob  32    92
3  Carol  28    78
4  David  22    95
```

In this example, the `read.csv()` function automatically detects the column headers and data types, creating a data frame with the appropriate structure. If your CSV file uses a different delimiter (not a comma), you can specify it using the `sep` parameter in the `read.csv()` function.

```r
# Read CSV file with a different delimiter (e.g., semicolon)
data <- read.csv("data.csv", sep = ";")
```

Remember to adjust the file name and delimiter according to your specific CSV file's format.